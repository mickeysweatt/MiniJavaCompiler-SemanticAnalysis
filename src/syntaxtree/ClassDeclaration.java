//
// Generated by JTB 1.3.2
//

package syntaxtree;

/**
 * Grammar production:
 * nodeToken -> "class"
 * identifier -> Identifier()
 * nodeToken1 -> "{"
 * nodeListOptional -> ( VarDeclaration() )*
 * nodeListOptional1 -> ( MethodDeclaration() )*
 * nodeToken2 -> "}"
 */
public class ClassDeclaration implements Node {
   public NodeToken nodeToken;
   public Identifier identifier;
   public NodeToken nodeToken1;
   public NodeListOptional nodeListOptional;
   public NodeListOptional nodeListOptional1;
   public NodeToken nodeToken2;

   public ClassDeclaration(NodeToken n0, Identifier n1, NodeToken n2, NodeListOptional n3, NodeListOptional n4, NodeToken n5) {
      nodeToken = n0;
      identifier = n1;
      nodeToken1 = n2;
      nodeListOptional = n3;
      nodeListOptional1 = n4;
      nodeToken2 = n5;
   }

   public ClassDeclaration(Identifier n0, NodeListOptional n1, NodeListOptional n2) {
      nodeToken = new NodeToken("class");
      identifier = n0;
      nodeToken1 = new NodeToken("{");
      nodeListOptional = n1;
      nodeListOptional1 = n2;
      nodeToken2 = new NodeToken("}");
   }

   public void accept(visitor.Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(visitor.GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(visitor.GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(visitor.GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
}

