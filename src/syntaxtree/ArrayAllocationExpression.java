//
// Generated by JTB 1.3.2
//

package syntaxtree;

/**
 * Grammar production:
 * nodeToken -> "new"
 * nodeToken1 -> "int"
 * nodeToken2 -> "["
 * expression -> Expression()
 * nodeToken3 -> "]"
 */
public class ArrayAllocationExpression implements Node {
   public NodeToken nodeToken;
   public NodeToken nodeToken1;
   public NodeToken nodeToken2;
   public Expression expression;
   public NodeToken nodeToken3;

   public ArrayAllocationExpression(NodeToken n0, NodeToken n1, NodeToken n2, Expression n3, NodeToken n4) {
      nodeToken = n0;
      nodeToken1 = n1;
      nodeToken2 = n2;
      expression = n3;
      nodeToken3 = n4;
   }

   public ArrayAllocationExpression(Expression n0) {
      nodeToken = new NodeToken("new");
      nodeToken1 = new NodeToken("int");
      nodeToken2 = new NodeToken("[");
      expression = n0;
      nodeToken3 = new NodeToken("]");
   }

   public void accept(visitor.Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(visitor.GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(visitor.GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(visitor.GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
}

